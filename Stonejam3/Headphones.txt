//Headphones
//by: link2_thepast
//v1.3
//No functions, just add "import Headphones" to the Mind Stone (requires Big Head)

//Adds a pair of headphones that scatter music notes behind the character
//Notes increase in speed while the wind is blowing


var color = #66CC00             //headphones color

var color_age1 = #66CC00        //note colors - notes fade with age
var color_age2 = #448800
var color_age3 = #225500

var max_notes = 5               //max notes alive at a time
var new_note_interval = 15      //number of ticks before a new note is created
var note_mov_interval = 9       //number of ticks between note random movements

var windy = false
var windy_note_interval = 5     //ticks before new note is created, when windy
var windy_mov_interval = 3      //ticks between note movements, when windy
var wind_mov_x = 0

var rng_x = 0
var rng_xmax = -3
var rng_xmin = -5

var rng_z = 0
var rng_zmax = 1
var rng_zmin = -3

var notes = []
var notes_xpos = []
var notes_zpos = []

var draw_x
var draw_z
var draw_note
var count

var dys_final

//detect "windy" environments
//occurs at Icy ridge, during bridge crossing, and during Dysangelos fight
?loc = rocky_plateau
  ?windy
    ?dys_final & (foe ! dysangelos)
      windy = false
      dys_final = false
    :?foe.hp < 1 & foe = dysangelos_perfected
      dys_final = true
  :
    ?foe = dysangelos & foe.state = 117
        windy = true

:?loc = icy_ridge
  windy = true

:?loc = cross_bridge
  ?pos.x > 300
    windy = false

  :?loc.begin
    windy = true

//create a new note every *new_note_interval* ticks
//increase rate to *windy_note_interval* ticks if the wind is blowing
?(!windy & time % new_note_interval = 0) | (windy & time % windy_note_interval = 0)
  //give notes a randomized position relative to player head
  rng_x = rng_xmin + rng % (rng_xmax - rng_xmin + 1)
  rng_z = rng_zmin + rng % (rng_zmax - rng_zmin + 1)

  //give notes a random symbol (♫ is less likely than ♪ because it's visually heavier)
  ?(rng % 3) = 0
    notes.Add("♫")
  :
    notes.Add("♪")

  //store note x,y pos
  notes_xpos.Add((pos.x + rng_x))
  notes_zpos.Add((pos.z - pos.y + rng_z))

  //pop oldest note if too many are onscreen
  ?notes.Count() > max_notes
    notes.RemoveAt(0)
    notes_xpos.RemoveAt(0)
    notes_zpos.RemoveAt(0)

//allow notes to drift every *note_mov_interval* ticks
//increase rate to *windy_mov_interval* ticks if the wind is blowing
?(!windy & time % note_mov_interval = 0) | (windy & time % windy_mov_interval = 0)
  count = notes.Count()
  ?count > 0
    ?count > max_notes
      count = max_notes

    for i = 0 .. count-1
      //notes drift farther while windy
      ?windy
        wind_mov_x = 2 + (rng%3)
      :
        wind_mov_x = 0

      notes_xpos.Emplace(i, notes_xpos[i] - (rng%2) - wind_mov_x)
      notes_zpos.Emplace(i, notes_zpos[i] - (rng%2))

//draw notes, if there are notes to be drawn
//only draw notes if Big Head mode is active
?Bighead
  count = notes.Count()
  ?count > 0
    ?count > max_notes
      count = max_notes

    for i = 0 .. count-1
      //correct for player's changing position
      draw_x = notes_xpos[i] - pos.x
      draw_z = notes_zpos[i] - pos.z + pos.y
      draw_note = notes[i]
      
      //note color fades away as its age increases
      ?i = 0
        >o@draw_x@,@draw_z@,@color_age3@,@draw_note@
      :?i < 3
        >o@draw_x@,@draw_z@,@color_age2@,@draw_note@
      :
        >o@draw_x@,@draw_z@,@color_age1@,@draw_note@

//draw headphones
//only visible if Big Head mode is active
>h-3,-2,@color@,ascii
##___
#/###\
(│###│)
asciiend

/*
PetBoo
v1.2.1
by Mind Stone Thief
Special thanks:
quips from Superfluous J
and the moving mechanism from xx
*/

var BooWavinganimation = [ascii
##.-.
#(# #)
-´   `-
asciiend
,ascii
##.-.
_(# #)_
`.   .´
asciiend
,ascii
##.-.
#(# #)
-´   `-
asciiend
,ascii
##.-.
#(# #)
#/   \
asciiend
]

var BooBlinkinganimation = [ascii
######
##o#o#
######
asciiend
,ascii
######
##=#=#
######
asciiend
,ascii
######
##-#-#
######
asciiend
,ascii
######
##-#-#
######
asciiend
,ascii
######
##=#=#
######
asciiend
,ascii
######
##o#o#
######
asciiend
]

var BooTalkinganimation = [ascii
######
######
###°##
asciiend
,ascii
######
######
######
asciiend
,ascii
######
######
###o##
asciiend
,ascii
######
######
###-##
asciiend
,ascii
######
######
###O##
asciiend
,ascii
######
######
###o##
asciiend
,ascii
######
######
###-##
asciiend
,ascii
######
######
###O##
asciiend
,ascii
######
######
###-##
asciiend
,ascii
######
######
###o##
asciiend
,ascii
######
######
###-##
asciiend
,ascii
######
######
###O##
asciiend
,ascii
######
######
###-##
asciiend
]

var Tailanimation = [ascii
,_) /
#`-´
asciiend
,ascii
,_\ (
#`--´
asciiend
,ascii
#,\ (
##`--'
asciiend
,ascii
##\ (
###'-'
asciiend
,ascii
##) /
##'-'
asciiend
,ascii
#,) /
#'-´
asciiend
]

var Sleepyanimation = [ascii
#####Z##z
##- -#
###°##
asciiend
,ascii
#######Z##z
##- -#
###O##
asciiend
,ascii
#####z##Z
##- -#
###°##
asciiend
,ascii
#######z##Z
##- -#
###O##
asciiend
]

var happyface = ascii
######
##^_^#
### ##
asciiend

var minDistance = 42 //minimum distance
var x = pos.x - minDistance + 1
var z = pos.z - 1
var speed = 0
var markposX
var fallsleeptime = 150
var d
var t = 0
var waveframe = 0
var blinkframe = 0
var talkframe = 0
var sleepframe = 0
var tailframe = 0
var sx
var bodyY
var tailY

var quipchance     //Are we supposed to start a quip?
var quipme = 0     //Are we currently saying a quip?
var quippos        //Where the quip starts, horizontally. A factor of the length of the quip's longest line.
var quipht         //Where the quip starts, vertically. A factor of the quip's line count.
var quipct         //The quip's line count.
var thequip        //The quip. A string, possibly cut into multiple lines by \n's
var midquip        //A line of the quip that is to be put into an array
var quiplside      //The left side of the quip outline. Literally 2 to the left of the quip's left side.
var quiparr = []   //The quip, stored in an array of strings instead of 1 string with \n's
var i              //for a for loop, to iterate the quip line by line.
var j              //for a for loop, to draw black squares in the quip text box before writing the quip.
var qoffx = 10
var qoffy = -1
var delayBetweenQuips = 0
var lastquip = ""

//5s fall asleep
?speed = 0 & !ai.walking
	fallsleeptime--
	?fallsleeptime <= 0
		markposX = pos.x
?ai.walking
	fallsleeptime = 150
d = pos.x - minDistance
?loc.loop | (time = 1 & loc ! rocky)
	x = d
	z = pos.z
	speed = 0
	t = 0
	quipme = 0
	fallsleeptime = 150
?x >= d
	speed = 0
:?speed ! 1
	?x < d - 20 // 5 + 5 + 10
		speed = 1
	:?x < d - 10 // 5 + 5
		speed = 2
	:?x < d - 5 // 5
		speed = 3
?speed <= 1 | !(time % (speed - 1))
	?speed ! 0 & (x < d | z ! pos.z)
		?x < d
			x++
			?speed = 1
				t = (t + 1) % 30
				?t = 0
					x++
		?z > pos.z
			z--
		:?z < pos.z
			z++
	:
		t = 0
waveframe = (totaltime/10) % BooWavinganimation.Count()
?totaltime % 180 < 30
	blinkframe = (totaltime/5) % BooBlinkinganimation.Count()
:
	blinkframe = 0
sleepframe = (totaltime/15) % Sleepyanimation.Count()
?quipme > 0
	talkframe = (totaltime/12) % BooTalkinganimation.Count()
:?speed = 0 & markposX = pos.x //sleep with a snoring mouth
	talkframe = 1
:
	talkframe = 0
tailframe = (totaltime/3) % Tailanimation.Count()

sx = x - pos.x + 30
?-sx < 100
	bodyY = z - pos.z + pos.y - 2
	tailY = bodyY + 3
>o@sx@,@bodyY@,#white,@BooWavinganimation[waveframe]@
>o@sx@,@bodyY@,#white,@BooBlinkinganimation[blinkframe]@
?speed = 0 & markposX = pos.x
	>o@sx@,@bodyY@,#white,@Sleepyanimation[sleepframe]@
>o@sx@,@bodyY@,#white,@BooTalkinganimation[talkframe]@
?foe = boss & foe.hp <= 0
	>o@sx@,@bodyY@,#white,@happyface@
>o@sx@,@tailY@,#white,@Tailanimation[tailframe]@


?quipme <= 0
	?pickup = treasure
		quipchance = 0
		delayBetweenQuips = 0
	:
		quipchance = rng % 181 //random number between 0 to 180
:
	quipchance = 180

?quipme > 0
	//draw the top 2 corners of the quip word bubble.
	quipht = -4-quipct
	>o@quiplside+sx+2+qoffx@,@quipht+bodyY+2+qoffy@,#808080,.
	>o@sx+4+qoffx@,@quipht+bodyY+2+qoffy@,#808080,.
	
	//draw the top and bottom lines of the quip word bubble.
	for i = quippos-1..1
		>o@i+sx+2+qoffx@,@quipht+bodyY+2+qoffy@,#808080,─
		>o@i+sx+2+qoffx@,@bodyY-1+qoffy@,#808080,─
	>o@quiplside+sx+2+qoffx@,@bodyY-1+qoffy@,#808080,'
	>o@sx+4+qoffx@,@bodyY-1+qoffy@,#808080,'
	
	//draw the \| part.
	>o@sx-4+qoffx@,@bodyY-1+qoffy@,#808080,.,─
	>o@sx-4+qoffx@,@bodyY+qoffy@,#808080,/
  
	//write the quip, first clearing the line with solid black ascii.
	for i = 0..quipct-1
		quipht = -3-quipct+i
		for j = quippos..0
			>o@j+sx+2+1+qoffx@,@quipht+bodyY+2+qoffy@,#000000,.
		midquip = quiparr[i]
		>o@quippos+sx+qoffx@,@quipht+bodyY+2+qoffy@,# @midquip@ #
		>o@quiplside+sx+2+qoffx@,@quipht+bodyY+2+qoffy@,#808080,│
		>o@sx+4+qoffx@,@quipht+bodyY+2+qoffy@,#808080,│

	//reduce the quipme timer, so you'll stop talking.
	quipme--

:?delayBetweenQuips > 0
	delayBetweenQuips--

//If we're not saying a quip, check if we should start a new one.
:?quipchance = 0
	//reset quip timer (you say it for 105 frames)
	quipme = 105
	delayBetweenQuips = 300 // At least 10 seconds between quips
	
	//Get a quip and put that quip into an array.
	thequip = getaquip()
	thequip = te.xt(thequip) // Translate it
	quiparr.Clear()
	quiparr = string.Break(thequip, 16)
	
	//Find the maximum width of the lines in the quip, and set the variables for drawing the text box later.
	quipct = quiparr.Count()
	quippos = 0
	for i = 0..quipct-1
		midquip = quiparr[i]
		?quippos < string.Size(midquip)
			quippos = string.Size(midquip)
	quippos=-quippos+1
	quiplside=quippos-2

	play boo_voice


func getaquip()
	//place all valid quips in an array, then pick one at random
	var a = [] //big array of potential things to say
	var c = 0  //the random thing that gets said
	a.Clear()
	
	// **************************
	// **** QUIPS START HERE ****
	// **************************
	?pickup = treasure
		a.Add("LOOT!!!")
	:
		//Quips based on world.
		
		//Quips based on your status
		?ai.walking
			a.Add("I'm hovering")
			a.Add("*hums a tune*")
			a.Add("My dark world feels brighter by your side.")
			a.Add("This is much better than throwing stones.\nOr mining!")
			a.Add("This is fun to watch!")
			a.Add("Let's see if you can get even stronger?")
			a.Add("What other cool weapons do you have?")
			a.Add("Can we get some snow cones after this?")
			a.Add("If you need, I can give you a little PUSH.\nGet it? Haha")
		?debuffs.string = debuff_dot
			a.Add("SOOO HOOOT")
		?debuffs.string = debuff_chill
			a.Add("Oh no.\nCold, isn't it?")
		?debuffs.string = debuff_damage
			a.Add("You're looking weaker...")
		?hp = maxhp
			a.Add("So far, so good")
			a.Add("This is gonna be great!")
			a.Add("We're on an adventure!")
			a.Add("weeee\nooooo\nweeee\nooooo")
			a.Add("You're in great form!")
		?hp < maxhp / 2
			a.Add("Be careful to not be UNMADE!")
		?armor > maxhp / 2
			a.Add("Your defense is looking great!")
		
		//Quips based on location
		?loc = "mine"
			a.Add("Being in the mines again is a strange feeling.")
			a.Add("Hello everyone! I'm back!")
		
		//Quips based on enemy status
		?foe.state=33
			a.Add("Oh I'm sorry, was that aimed at me?")
		?foe.state=115
			a.Add("Uh oh what's that?")
		?foe = nagaraja
			a.Add("Oh no!\nThe Tongue!!!")
		?foe=boss & foe ! pallas
			a.Add("I think you're gonna win.")
			a.Add("Boss? More like WUSS!")
			a.Add("They told me this fight would be HARD")
		?foe = pallas
			a.Add("THE GREAT FALLEN GOD!")
		
		//Random dependant quips
		?harvest.distance ! 9999
			a.Add("What's this thing?")
		?pickup
			a.Add("LOOT!!!")
	
	//In case there are no other quips
	//NOTE YOU NEED AT LEAST ONE OF THESE
	//or the script will get errors if there are no quips.
	?a.Count() = 0
		a.Add(" ... ")
	//return 1 quip. Avoid returning the same as last time
	var result = lastquip
	for i = 1..3
		?result = lastquip
			c = rng % a.Count()
			result = a[c]
	lastquip = result
	return result
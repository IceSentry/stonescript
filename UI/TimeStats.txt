var utils = import UI/Utils

// max
var window_max = ascii
╔Times═════════╗
║↑      ~      ║
║↓      =      ║
╚══════════════╝
asciiend

// min
var window_min = ascii
╔Times═════╗
║↑    ~    ║
║↓    =    ║
╚══════════╝
asciiend

// right
var window_right = ascii
╔Times═══════╗
║↑    ~      ║
║↓    =      ║
╚════════════╝
asciiend

// left
var window_left = ascii
╔Times═══════╗
║↑      ~    ║
║↓      =    ║
╚════════════╝
asciiend

var run_count = 0
var total_time_sum = 0
var average = 0
var best = 0
var worst = 0
var current = 0
var last = 0

func show(x, y)
  // only update every second
  ?time % 30 = 0
    current++

  ?loc.loop
    ?run_count = 0
      best = current
      worst = current
    :?current < best
      best = current
    :?current > worst
      worst = current
    total_time_sum = total_time_sum + current
    run_count++
    average = total_time_sum / run_count
    current = 0

  // auto resizing
  // var left_too_long  = (best > 1800 | worst > 1800)
  // var right_too_long  = (average > 1800 | current > 1800)
  // ?left_too_long & right_too_long
  //   utils.out(x, y, #808080, window_max)
  // :?left_too_long
  //   utils.out(x, y, #808080, window_left)
  // :?right_too_long
  //   utils.out(x, y, #808080, window_right)
  // :
  //   utils.out(x, y, #808080, window_min)

  utils.out(x, y, #808080, window_max)
  
  var content_x = x + 2
  utils.out_time(content_x, y + 1, #80F080, best)
  utils.out_time(content_x, y + 2, #F08080, worst)
  utils.out_time(content_x + 7, y + 1, #D0D080, average)
  utils.out_time(content_x + 7, y + 2, #8080F0, current)

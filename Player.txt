var state_machine = import StateMachine
var collection = import Collection
var ki_farming = import KiFarming

var utils = new Utils
var state_machine = new StateMachine

// ======
// consts
// ======

var fissure_cooldown = 18
var fissure_charge = 1

// =========
// variables
// =========

var fissure_timer = 0
?loc.loop
  fissure_timer = 0

// ==========
// properties
// ==========

func hp_percentage()
  return utils.calc_percentage(hp, maxhp)

func armor_percentage()
  return utils.calc_percentage(armor, maxarmor)

// =======
// methods
// =======

func equip_fissure()
  >fissure @fissure_timer@

  ?fissure_timer > 0 & time % 30 = 0
    fissure_timer-- // tick every second

  ?!item.CanActivate()
    return

  ?fissure_timer = 0
    fissure_timer = fissure_cooldown + fissure_charge

  ?fissure_timer >= fissure_cooldown
    state_machine.start_casting()
    equipL fissure // need to equip it for a while to charge
    // TODO equip +heal offhand for more damage
  :
    state_machine.stop_casting()

func equip_melee()
  // left
  ?foe = immune_to_physical & foe ! immune_to_ranged
    equipL wand
  :?foe.armor > 0
    equipL hammer
  :
    equipL vigor sword

  // right
  ?foe = immune_to_stun | hp_percentage() <= 90
    equipR vigor shield
  :?ki_farming.is_farming & hp_percentage() = 100 & foe ! boss
    equipR ki
  :
    equipR compound shield

func equip_ranged()
  ?foe = magic_resist & foe ! immune_to_physical
    equip repeating crossbow
    return

  // left
  ?foe = vigor
    equipL p wand
  :
    equipL vigor wand

  // right
  ?hp_percentage() >= 90
    ?ki_farming.is_farming & foe ! boss
      equipR ki
    :        
      equipR moondial // attack speed
  :
    equipR vigor shield

func potion()
  ?ki_farming.is_farming & state_machine.is_combat()
    activate potion // wood
  :?debuffs.count > 5 | hp_percentage() < 40
    activate potion // cleansing

func dodge()
  ?item.GetCooldown("mind") = 0
    equipL mind

func dash()
  // quarterstaff
  ?item.CanActivate() & item.GetCooldown("quarterstaff") = 0
    equip quarterstaff
    activate R

func combat_dash()
  ?foe.distance > 13
    equipR triskelion
  ?item.GetCooldown("bash") = 0
    equipR bashing shield
  :?item.GetCooldown("dash") = 0
    equipR dashing shield

// =================
// Update
// =================

ki_farming.update()
state_machine.update()

// =================
// Use state machine
// =================

func update()
  ?state_machine.state() = out_of_combat
    equipR compound shield
    equipL ouroboros // passive heal

    ?hp_percentage() >= 90
      equipL triskelion // gotta go fast
      ?!ai.idle
        dash()

  :?state_machine.state() = collecting
    collection.collect()

  :?state_machine.state() = combat_ranged
    equip_ranged()

  :?state_machine.state() = combat_melee
    equip_melee()
    // TODO bardiche check
    ?foe.distance > 7
      combat_dash()

  :?state_machine.state() = casting
    >o1,1,casting

update()

// =================
// Boss stuff
// =================

?foe = boss & state_machine.is_combat() | state_machine.state() = casting
  var timemod
  timemod = foe.time / 10
  >f0,8,state: @foe.state@ t: @timemod@

  ?foe.debuffs.count = 0 & foe ! immune_to_debuff_damage &
  ^(foe.name = dysangelos & foe = phase2) // there's a weird part where he's somehow immune to debuff
    equipR dp wand

  ?foe.distance <= 10 & item.CanActivate() & item.GetCooldown("bardiche") = 0
    equip bardiche 
    activate R

  ?foe.name = bolesh
    ?foe.state = 133 & foe.time = 1
      dodge()
  :?foe.name = angry shroom
    // TODO handle salvo
    ?foe.state = 32 & foe.time = 50
      dodge()
  :?foe.name = morel
    ?foe.state = 33 & foe.time = 0
      dodge()
  :?foe.name = xyloalgia
    equip_fissure()
    ?foe.state = 33 & foe.time = 15 & state_machine.state() ! casting
      dodge()
  :?foe.name = bronze
    ?foe.state = 2
      equip repeating crossbow
    :?foe.state = 32 & foe.time = 30
      dodge()
  :?foe.name = nagaraja
    ?foe.state = 33 & foe.time = 20
      dodge()

// prioritize the potion
potion()

var state_str
state_str = state_machine.state()
>o-6,7,state: @state_str@

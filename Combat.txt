var utils = new Utils

var combat_distance = 22
var melee_distance = 8
var is_ki_farming = false
?key = back // press x
  is_ki_farming = true
  >ki farming activated
  
?(loc.begin | loc.loop) & is_ki_farming
  >ki farming enabled
  // TODO uncomment when brew api is added
  // brew wood

var hp_percentage
hp_percentage = utils.calc_percentage(hp, maxhp)

var armor_percentage
armor_percentage = utils.calc_percentage(armor, maxarmor)

// states
var states = ["out_of_combat", "combat_melee", "combat_ranged"]
var out_of_combat = states.IndexOf("out_of_combat")
var combat_melee = states.IndexOf("combat_melee")
var combat_ranged = states.IndexOf("combat_ranged")

var _state = out_of_combat

// utils 

func is_immune_to(type)
  return foe = "immune_to_" + type

// actions

func equip_melee()
  // left
  ?is_immune_to("physical") & !is_immune_to("ranged")
    equipL wand
  :?foe.armor > 0
    equipL hammer
  :
    equipL vigor sword

  // right
  ?is_immune_to("stun") | hp_percentage <= 90
    equipR vigor shield
  :
    equipR compound shield

func equip_ranged()
  ?foe = magic_resist & !is_immune_to("physical")
    equip repeating crossbow
  :
    // left
    ?foe = vigor
      equipL dp wand
    :
      equipL vigor want

    // right
    ?hp_percentage >= 95
      ?is_ki_farming
        equipR ki
      :        
        equipR moondial // attack speed
    :
      equipR vigor shield

func equip_stone()
  ?hp_percentage <= 95
    equip ouroboros // passive heal
  :
    equip triskelion // gotta go fast

func potion()
  ?is_ki_farming & foe.distance < combat_distance
    activate potion
  :?debuffs.count > 5 | hp_percentage < 40
    activate potion

func dodge()
  ?item.GetCooldown("mind") <= 0
    equipL mind

// states

func run(state)
  potion()

  ?state = out_of_combat
    ?foe.distance < combat_distance
      return combat_ranged

    equip_stone()

  :?state = combat_ranged
    ?foe.distance > combat_distance
      return out_of_combat

    ?foe.distance < melee_distance | is_immune_to("ranged") | foe.armor > 0
      return combat_melee
    
    equip_ranged()

  :?state = combat_melee
    ?foe.distance > combat_distance
      return out_of_combat
    
    equip_melee()

  ?foe = boss
    var timemod
    timemod = foe.time / 10
    >f8,1,state: @foe.state@ t: @timemod@

    ?foe.debuffs.count = 0 & !is_immune_to("debuff_damage")
      equip dp wand

    ?item.GetCooldown("fissure") <= 0
      equip fissure

    ?foe.name = bolesh
      ?foe.state = 133 & foe.time = 1
        dodge()
    :?foe.name = angry shroom
      ?foe.state = 32 & foe.time = 50
        dodge()
    :?foe.name = morel
      ?foe.state = 33 & foe.time = 0
        dodge()
    :?foe.name = xyloalgia
      ?foe.state = 33 & foe.time = 15
        dodge()

  // state unchanged
  return state


_state = run(_state)

// var pretty
// pretty = states[_state]
// >state: @pretty@
